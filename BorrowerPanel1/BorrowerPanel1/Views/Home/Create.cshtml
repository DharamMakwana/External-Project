@model BorrowerPanel1.Models.BorrowerTb

@{
    ViewData["Title"] = "Create";
}

<style>
    /* Add your styles here */
    .login-card {
        /* Add your card styles here */
    }

    /* Add any additional styling as needed */
</style>


<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6 mx-auto">
            <div class="card login-card shadow">
                <div class="card-body">
                    <h1 class="card-title text-center">Register</h1>

                    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            @ViewBag.ErrorMessage
                        </div>
                    }

                    <form asp-action="Create">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <label asp-for="FirstName" class="control-label"></label>
                            <input asp-for="FirstName" class="form-control" />
                            <span asp-validation-for="FirstName" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="LastName" class="control-label"></label>
                            <input asp-for="LastName" class="form-control" />
                            <span asp-validation-for="LastName" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="EmailId" class="control-label"></label>
                            <input asp-for="EmailId" class="form-control" />
                            <span asp-validation-for="EmailId" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="ContactNumber" class="control-label"></label>
                            <input asp-for="ContactNumber" class="form-control" />
                            <span asp-validation-for="ContactNumber" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Address" class="control-label"></label>
                            <input asp-for="Address" class="form-control" />
                            <span asp-validation-for="Address" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="Password" class="control-label"></label>
                            <input type="password" asp-for="Password" class="form-control" id="password" />
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label class="control-label">Confirm Password</label>
                            <input type="password"  class="form-control" id="confirmPassword" />
                            <span  class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Create" class="btn btn-primary" />
                        </div>
                    </form>

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // JavaScript for password matching
        document.addEventListener('DOMContentLoaded', function () {
            var password = document.getElementById('password');
            var confirmPassword = document.getElementById('confirmPassword');

            password.addEventListener('input', function () {
                if (password.value !== confirmPassword.value) {
                    confirmPassword.setCustomValidity('Passwords do not match');
                } else {
                    confirmPassword.setCustomValidity('');
                }
            });

            confirmPassword.addEventListener('input', function () {
                if (password.value !== confirmPassword.value) {
                    confirmPassword.setCustomValidity('Passwords do not match');
                } else {
                    confirmPassword.setCustomValidity('');
                }
            });
        });
    </script>
}
